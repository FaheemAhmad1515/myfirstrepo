// C++ program to implement
// queue using array.
#include <bits/stdc++.h>
using namespace std;

class Queue {
  public:
    vector<int> arr;
    int size;
    int capacity;
    int front;

    Queue(int qSize) {
        size = 0;
        front = 0;
        capacity = qSize;
        arr.resize(qSize);
    }

    // Function to add an element
    // to queue.
    void enqueue(int x) {

        // If queue is full
        if (size == capacity) {
            return;
        }

        arr[size] = x;

        // Increment queue size.
        size++;
    }

    // Function to pop front
    // element from queue.
    void dequeue() {

        // If queue is empty
        if (size == 0) {
            return;
        }

        // Shift all the elements
        // to the left.
        for (int i = 1; i < size; i++) {
            arr[i - 1] = arr[i];
        }

        // decrement queue size
        size--;
    }

    // Function which returns
    // the front element.
    int getFront() {

        // If queue is empty
        if (size == 0)
            return -1;

        return arr[front];
    }

    // Function which prints
    // the elements of array.
    void display() {

        for (int i = front; i < size; i++) {
            cout << arr[i] << " ";
        }
        cout << endl;
    }
};

int main() {
  
    Queue *q = new Queue(4);

    q->enqueue(1);
    q->enqueue(2);
    q->enqueue(3);
    cout << q->getFront() << endl;
    q->dequeue();
    q->enqueue(4);
    q->display();

    return 0;
}
